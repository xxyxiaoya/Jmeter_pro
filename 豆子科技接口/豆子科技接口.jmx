<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">E:\Jemeter_Project\CiphertextOpt.jar</stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">Select 1 from dual</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">Oracle_xj</stringProp>
        <stringProp name="dbUrl">jdbc:oracle:thin:@192.168.7.202:1521:xjtest</stringProp>
        <stringProp name="driver">oracle.jdbc.driver.OracleDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">settletest</stringProp>
        <stringProp name="poolMax">10</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">settleuser</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525225707000</longProp>
        <longProp name="ThreadGroup.end_time">1525225707000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="客户服务信息接口（满标）" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">settle.zhph.lan/api/v1</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="设置接口地址" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">vars.put(&quot;IFname&quot;, &quot;settleOpenServiceApi/receiveServiceRefundFee&quot;);

//Stirng serverFeeTotal=&quot;5000&quot;;
//vars.put(&quot;serverFeeTotal&quot;,serverFeeTotal);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口参数全部正确" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;   
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口itemID为空" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;   
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口userName为空" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;   
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口loanNo为空" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;   
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口loanNo输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;7001511230054295474547583475969848650680lhmgjhfgjhkjlgjklklg453526456557sfdsgfgfdhgjhkjhlkj;kl/klmghjfghdfhszgas...\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;   
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口serverFeeTotal为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;   
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口serverFeeTotal输入超过1000的字符" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;984364576586787970895456356352433225345456457657567657678768687867564.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;   
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口duetoZhServiceFee为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;   
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口duetoZhServiceFee输入超过1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27346546457568769870575674325645756876869789809807678574635346242313223253453434.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;    
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口duetoZhServiceTime为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;    
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口duetoZhServiceTime格式为xxxxxxxx  " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;20171128\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;   
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口duetoZhServiceTime月份超12月 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-13-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;   
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口duetoZhServiceTime日期超31天 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-32\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;    
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口zhServiceAccState为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;   
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口zhServiceAccState为1 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;    
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口zhServiceAccState非0和1  " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;4\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;   
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口duetoConsultFee为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;   
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口duetoConsultFee输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;    
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口duetoConsultTime为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;   
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口duetoConsultTime格式为xxxx.xx.xx " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017.11.28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;   
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口duetoConsultTime月份超12月 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-13-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;    
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口duetoConsultTime日期超31天 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-32\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;    
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口consultAccState为1 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;    
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口consultAccState非0和1 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;4\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;    
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口duetoAddCredit为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;   
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口duetoAddCredit输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;682353464564574535738457986945640640798760879474362315635262756285843758657678365659.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;    
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口duetoAddCreditTime为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;    
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口duetoAddCreditTime格式为xxxx.xx.xx " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017.11.28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;   
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口duetoAddCreditTime月份超12月 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-13-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;    
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口duetoAddCreditTime日期超31天 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-32\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;    
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口creditAccState为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;    
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口creditAccState为0" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;    
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口creditAccState非1和0 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;4\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇\&quot;,&quot; +
            &quot;}}}&quot;;    
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口createUser为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;\&quot;,&quot; +
            &quot;}}}&quot;;   
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="客户服务信息接口createUser输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;
System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;梁志宇\&quot;,&quot; +
            &quot;\&quot;data\&quot;:{&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;70015112300542954745\&quot;,&quot; +
            &quot;\&quot;serverFeeTotal\&quot;:\&quot;98.00\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceFee\&quot;:\&quot;27.40\&quot;,&quot; +
            &quot;\&quot;duetoZhServiceTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;zhServiceAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoConsultFee\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;duetoConsultTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;consultAccState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoAddCredit\&quot;:\&quot;68.60\&quot;,&quot; +
            &quot;\&quot;duetoAddCreditTime\&quot;:\&quot;2017-11-28\&quot;,&quot; +
            &quot;\&quot;creditAccState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createUser\&quot;:\&quot;梁志宇看到过接口感觉高科技和髋关节和教育局看见看见发动机号jsfkjgkdlfjgkjhgfjdjlkjhkgljhkjkjnfjfkj\&quot;,&quot; +
            &quot;}}}&quot;;    
String a = null;
//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="账户基本信息接口（放款）" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">settle.zhph.lan/api/v1</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="设置接口地址" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">vars.put(&quot;IFname&quot;, &quot;settleOpenServiceApi/receiveAccountInfo&quot;);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口参数全部正确" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口itemID为空" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口loanNo为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口loanNo输入超过1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;52010020160813621999000012745846798567895678720738249895859048695869386439592895082058928592859859849589385948...\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口registerTime为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口registerTime格式为xxxx.xx.xx " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016.8.13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口registerTime月份超12月 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/13/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口registerTime日期超31天 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/32 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口orgId为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/13/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口orgId输入超过1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0hdfvshdfbsjkdbfajkbdkaboljefjkjadbfjdbjkabakblsjbfakfjabfhbashbfjsakbfkjabfjak...\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口loanName为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口loanName输入超过1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英不是神经病是见死不救分部积分能不能京东方你不是可能是你加班费哈是返回VB是还是报VB湖北省科技分别将分别那就等女...\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口cusType为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口cusType输入004" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;004\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口idcardNo为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口idcardNo输入超过1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;52010319670509564938729847389579487526374164761746217493294832759834257264167264832794723569625729578631767...\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口loanAmount为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口loanAmount输入超过1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608734839274326571659832587457043782562756746574395849386430689438678297892697480276047628027672840.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口payAccountNo为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口payAccountNo输入超过1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;621226240200527365734782364763275924859284759826375268657627396598319873498720957984375984365892656267...\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口payAccountName为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口payAccountName输入超过1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英好的深VUS呼和赶尽杀绝啊嘎嘎双方各花洒管附件花费绝对是高绿化率高昆仑山嘎嘎和噶尔u爱法规u违法建设发给你时间内\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口payOpenOrgBank为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口payOpenOrgBank输入建设银行 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;建设银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口outPayChannel为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口outPayChannel输入超过1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAIhsdjghsljkdghlkshgkghwehohaqoighlsdhglkshgkjskgjdklfjhklfdjhshdahfajklfjaskffjhsdjkghajkghhjah...\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口tel为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口tel输入10位数字 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;1830265784\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口tel输入12位数字 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;183026578470\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口tel输入起始非1的11位数字 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;38302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口tel输入特殊字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;%$&amp;*……\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口isSpecial为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口isSpecial为0 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口isSpecial为4" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;4\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口createId输入超过1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;283743659bhsdfbakjbjfhadfjksdhgj3759574985789263dbfkhsjdfhksdjgjhdgahgfhadkjhfdhg24723987598758275631885...\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口createName为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口createName输入超过1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETLhajhfakjhflasbfbavhbdvhadjahdfjhldgjsghsbghsbajsjakfjaksjdkjlajksaanysgrsvbdsnbdvahsgfegyfegafgahbfhab...\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口createTime为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口createTime格式为xxxx.xx.xx " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017.12.24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口createTime月份超12月 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/13/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口createTime日期超31天 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/32 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口productId为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口productId输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;2000173467324983725872637136476285924385938473867384783263471647192874908307504578237467364716747184938277...\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口saleId为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口saleId输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP00018247829374162742389748723563725871872817284932436471673467364156247128917824728493289057945674326732631...\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口termId为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口termId输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38378r89327r829t7483t7fgsf32748fgshfgsdfgajhsjkhf3724893523hghgyg374y71978973481...\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口saleName为空" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口saleName输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜sfjshfjsdhfjsdhnjsghdjkfakljkfbdsgbjssjgbfjsdlakjdkfljsfvfsjvsdfasasfdsdfasasaeaedaeadfafhgfjgfhjfgj...\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口saleTel为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口saleTel输入10位数字 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;1837504392\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口saleTel输入12位数字 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;183750439280\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口saleTel输入起始非1的11位数字 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;38375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口virtualAccount为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口mainbody为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口mainbody为ht" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ht\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口mainbody为zjskdfnj " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;zjskdfnj\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口duetoCapital为空" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口duetoInterest为空" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口duetoOverdue_fee为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口duetoOverdue_fee输入0" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口duetoPremium为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口duetoPremium输入20" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;20\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口duetoSpecial为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口duetoSpecial输入0" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口serviceLine为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口serviceLine为CLSP001 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;CLSP001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口serviceLine为SYBS001" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;SYBS001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口payDate为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口payDate格式为xxxx.xx.xx " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016.8.14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口payDate月份超12月 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/13/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口payDate日期超31天 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/32 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口monthPayDate为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口monthPayDate日期超31天 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-32\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口monthRepayTime为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口monthRepayTime日期超31天 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-32\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口billTerm为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口billTerm输入353425 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;353425\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口duetoCapital为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口duetoInterest为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口duetoAmount为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口duetoPremium为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口duetoSpecial为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口earlySettleAmount为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口earlySettleRefound为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口supplier为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口supplier输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAIHDJHJSHLSHFJHJFSHFLSKJDKSJHFJSVLHSVJSHUVHSUSUGFUSHVSHJVKHVLSHKJSHUFSGFSGUHSJHSJHUFHSFHSKUHSHSKHFUSHU...\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口billTerm为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口billTerm输入15" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;15\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口billTerm输入特殊字符" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;%#&amp;#……\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口duetoDate为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口duetoInterest为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口duetoCapital为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口earlySettleAmount为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口monthRepayTime为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口monthRepayTime日期超31天 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-32\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口withdrawCashState为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口withdrawCashState为0 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口withdrawCashState为2 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;2\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;0\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口operationState为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口operationState为1 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;1\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="账户基本信息接口operationState为2 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;5201002016081362199900001\&quot;,&quot; +
            &quot;\&quot;registerTime\&quot;:\&quot;2016/8/13 15:14:33\&quot;,&quot; +
            &quot;\&quot;orgId\&quot;:\&quot;1DDFE853192700015D2F571616401BF0\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;cusType\&quot;:\&quot;001\&quot;,&quot; +
            &quot;\&quot;idcardNo\&quot;:\&quot;520103196705095649\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6212262402005273657\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;李凤英\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;工商银行\&quot;,&quot; +
            &quot;\&quot;outPayChannel\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;18302657847\&quot;,&quot; +
            &quot;\&quot;isSpecial\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;createId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;createName\&quot;:\&quot;ETL\&quot;,&quot; +
            &quot;\&quot;createTime\&quot;:\&quot;2017/12/24 17:33:12\&quot;,&quot; +
            &quot;\&quot;productId\&quot;:\&quot;20001\&quot;,&quot; +
            &quot;\&quot;saleId\&quot;:\&quot;CP0001\&quot;,&quot; +
            &quot;\&quot;termId\&quot;:\&quot;1DDFDF8DA457000136CCEA001D701C38\&quot;,&quot; +
            &quot;\&quot;saleName\&quot;:\&quot;陈盼胜\&quot;,&quot; +
            &quot;\&quot;saleTel\&quot;:\&quot;18375043928\&quot;,&quot; +
            &quot;\&quot;virtualAccount\&quot;:\&quot;0.00\&quot;,&quot; +
            &quot;\&quot;mainbody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;2608.000000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;199.040000\&quot;,&quot; +
            &quot;\&quot;duetoOverdue_fee\&quot;:\&quot;30.00\&quot;,&quot; +
            &quot;\&quot;duetoPoundage\&quot;:\&quot;20.000000\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;120.000000\&quot;,&quot; +
            &quot;\&quot;serviceLine\&quot;:\&quot;COFI001\&quot;,&quot; +
            &quot;\&quot;payDate\&quot;:\&quot;2016/8/14 11:21:56\&quot;,&quot; +
            &quot;\&quot;monthPayDate\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;repaymentInfo\&quot;:[{&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.260000\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoAmount\&quot;:\&quot;243.92\&quot;,&quot; +
            &quot;\&quot;duetoPremium\&quot;:\&quot;0.000000\&quot;,&quot; +
            &quot;\&quot;duetoSpecial\&quot;:\&quot;10.000000\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;243.920000\&quot;,&quot; +
            &quot;\&quot;earlySettleRefound\&quot;: \&quot;0.000000\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;guaranteePlatfrom\&quot;:[{&quot; +
            &quot;\&quot;supplier\&quot;:\&quot;TUANDAI\&quot;,&quot; +
            &quot;\&quot;billTerm\&quot;:\&quot;12\&quot;,&quot; +
            &quot;\&quot;duetoDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;duetoInterest\&quot;:\&quot;2.660000\&quot;,&quot; +
            &quot;\&quot;duetoCapital\&quot;:\&quot;231.26\&quot;,&quot; +
            &quot;\&quot;earlySettleAmount\&quot;:\&quot;233.92\&quot;,&quot; +
            &quot;\&quot;monthRepayTime\&quot;:\&quot;2017-08-12\&quot;&quot; +
            &quot;}],&quot; +
            &quot;\&quot;status\&quot;:{&quot; +
            &quot;\&quot;withdrawCashState\&quot;:\&quot;1\&quot;,&quot; +
            &quot;\&quot;operationState\&quot;:\&quot;2\&quot;&quot; +
		  &quot;}}}&quot;;  
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="还款信息接口" enabled="false"/>
        <hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.zhph.lan/ws/v1</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="设置接口地址" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">vars.put(&quot;IFname&quot;, &quot;repay/list&quot;);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口参数全部正确" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口itemID为空" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口id为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口id输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0efgsdjsdghsjdghjadhajfhakjgbfjglskhglksdglakshfajsfjagfjagjhjdfghflghjfjakgfjafjafh...\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口loanNo为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口loanNo输入超过1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643482364298758923752634716349793285723647154512746891364712632156457647325698359827596371697112...\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口loanName为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口loanName输入超过1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川vshjgshgkjskbhgjshdfjsgjhdjghkldsjgfhgshfgagfahgfh绝代风华就收到货是接口是吧是归属感家dgjshgjkahgjshkjghkahg...\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口tel为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口tel输入10位数字 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;1832849666\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口tel输入12位数字 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;183284966682\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口tel输入起始数字非1的11位数字 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;38328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口tel输入特殊字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;$%#&amp;@%……\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口idCardNo为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口idCardNo输入超过1000字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;5130011988090902113482374672541642874637825674569882795847684257154165236fg436512641876478148732598725987252289...\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口repayTime为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口repayTime日期格式为xxxx.xx.xx " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017.12.7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口repayTime月份超12月 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/13/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口repayTime日期超31天 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/32 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口transTime为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口transTime格式为xxxx.xx.xx " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017.12.7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口transTime月份超12月 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/13/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口transTime日期超31天 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/32 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口repayTime大于transTime " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2018/2/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口repayTime小于transTime " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/6/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;1\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口payModel为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口payModel为2 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;2\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息接口payModel非1和2 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;5\&quot;&quot; +
            &quot;},&quot; +
            &quot;\&quot;limit\&quot;: \&quot;10\&quot;,&quot; +
            &quot;\&quot;currentPage\&quot;: \&quot;1\&quot;&quot; +
            &quot;}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="还款信息存对公信息查询 " enabled="false"/>
        <hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.zhph.lan/ws/v1</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="设置接口地址" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">vars.put(&quot;IFname&quot;, &quot;repay/detail&quot;);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息存对公信息查询接口参数全部正确" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{&quot; +
            &quot;\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;repayId\&quot;: \&quot;e316fe91757a4d5baa48e7eac11003cb\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息存对公信息查询接口itemID为空" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{&quot; +
            &quot;\&quot;itemID\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;repayId\&quot;: \&quot;e316fe91757a4d5baa48e7eac11003cb\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息存对公信息查询接口userName为空" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{&quot; +
            &quot;\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;repayId\&quot;: \&quot;e316fe91757a4d5baa48e7eac11003cb\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息存对公信息查询接口repayId为空" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{&quot; +
            &quot;\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;repayId\&quot;: \&quot;\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息存对公信息查询接口repayId输入超过1000的字符" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{&quot; +
            &quot;\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;repayId\&quot;: \&quot;e316fe91757a4d5baa48e7eac11003cbhfsuhgsngbhsjbhsjbksjskhdgdjgsdgdhgjsfgj1243765850497689740djbgvjsbbjbdjl...\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="还款信息导出" enabled="false"/>
        <hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.zhph.lan/ws/v1</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="设置接口地址" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">vars.put(&quot;IFname&quot;, &quot;repay/exportData&quot;);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口参数全部正确" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口itemID为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口userName为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口id为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口id输入超1000的字符" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0esjdbgBjsdbgjjsdgkfngjdfgbsjldfkalnflkeoehnjdbvgfbgjsdngdlkgbjksnaklnfaklnflajfn...\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口loanNo为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口loanNo输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643435792847526735829357293574896285817381734083057464682785397165873587193810837587158...\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口loanName为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口loanName输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川hdvkdshbjfkhlkdgjabdgdgbajfjdgnglksfnglkfhnlkdnlaajsfajabgjdgnknlkfnjbbfabfjasflkanclkdgbgjddsbgjdfas...\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口tel为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口tel输入10位数字 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;1832849666\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口tel输入12位数字 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;183284966684\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口tel输入起始非1的11位数字 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;48328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口tel输入特殊字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;$%&amp;#@&amp;……\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口idCardNo为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口idCardNo输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211235657364255436576587687898987453423523135325346547568768979780996867867856456343634636...\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口repayTime为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口repayTime格式为xxxx.xx.xx " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017.12.7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口repayTime月份超12月 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/13/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口repayTime日期超31天 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/32 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口transTime为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口transTime格式为xxxx.xx.xx " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017.12.7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口transTime月份超12月 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/13/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口transTime日期超31天 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/32 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T002\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口payModel为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口payModel输入T001" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;T001\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="还款信息导出接口payModel输入TVHSBK" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;id\&quot;: \&quot;8a695bb514884466ae2872fb68715d0e\&quot;,&quot; +
            &quot;\&quot;loanNo\&quot;: \&quot;70015113139010724643\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;: \&quot;王川\&quot;,&quot; +
            &quot;\&quot;tel\&quot;: \&quot;18328496668\&quot;,&quot; +
            &quot;\&quot;idCardNo\&quot;: \&quot;513001198809090211\&quot;,&quot; +
            &quot;\&quot;repayTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;transTime\&quot;: \&quot;2017/12/7 19:40:01\&quot;,&quot; +
            &quot;\&quot;payModel\&quot;: \&quot;TVHSBK\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="修改基础信息接口" enabled="false"/>
        <hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">settle.zhph.lan/api/v1</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="设置接口地址" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">vars.put(&quot;IFname&quot;, &quot;settleOpenServiceApi/updateAccountInfo&quot;);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改基础信息接口参数全部正确" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;td_zhph_xfjr\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;4103002016082165300002\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6221504910007090282\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;王志博\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;邮政银行\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;15824938799\&quot;,&quot; +
            &quot;}}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改基础信息接口itemID为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;td_zhph_xfjr\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;4103002016082165300002\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6221504910007090282\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;王志博\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;邮政银行\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;15824938799\&quot;,&quot; +
            &quot;}}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改基础信息接口userName为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;4103002016082165300002\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6221504910007090282\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;王志博\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;邮政银行\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;15824938799\&quot;,&quot; +
            &quot;}}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改基础信息接口loanNo为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;td_zhph_xfjr\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6221504910007090282\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;王志博\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;邮政银行\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;15824938799\&quot;,&quot; +
            &quot;}}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改基础信息接口loanNo输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;td_zhph_xfjr\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;41030020160821653000024587239574983602873467316752463725698457948356723573415746734916274254615284674675613...\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6221504910007090282\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;王志博\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;邮政银行\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;15824938799\&quot;,&quot; +
            &quot;}}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改基础信息接口payAccountNo为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;td_zhph_xfjr\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;4103002016082165300002\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;王志博\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;邮政银行\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;15824938799\&quot;,&quot; +
            &quot;}}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改基础信息接口payAccountNo输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;td_zhph_xfjr\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;4103002016082165300002\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;62215049100070902823894728347196471294812047914926587659834768973496278652798347876463573857827572881...\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;王志博\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;邮政银行\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;15824938799\&quot;,&quot; +
            &quot;}}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改基础信息接口payAccountName为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;td_zhph_xfjr\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;4103002016082165300002\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6221504910007090282\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;邮政银行\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;15824938799\&quot;,&quot; +
            &quot;}}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改基础信息接口payAccountName输入其他姓名" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;td_zhph_xfjr\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;4103002016082165300002\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6221504910007090282\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;张三\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;邮政银行\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;15824938799\&quot;,&quot; +
            &quot;}}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改基础信息接口payOpenOrgBank为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;td_zhph_xfjr\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;4103002016082165300002\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6221504910007090282\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;王志博\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;15824938799\&quot;,&quot; +
            &quot;}}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改基础信息接口payOpenOrgBank输入其他银行 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;td_zhph_xfjr\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;4103002016082165300002\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6221504910007090282\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;王志博\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;招商银行\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;15824938799\&quot;,&quot; +
            &quot;}}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改基础信息接口tel为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;td_zhph_xfjr\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;4103002016082165300002\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6221504910007090282\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;王志博\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;邮政银行\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;\&quot;,&quot; +
            &quot;}}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改基础信息接口tel输入10位数字 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;td_zhph_xfjr\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;4103002016082165300002\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6221504910007090282\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;王志博\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;邮政银行\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;1582493879\&quot;,&quot; +
            &quot;}}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改基础信息接口tel输入12位数字 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;td_zhph_xfjr\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;4103002016082165300002\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6221504910007090282\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;王志博\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;邮政银行\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;158249387990\&quot;,&quot; +
            &quot;}}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改基础信息接口tel输入起始非1的11位数字 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;td_zhph_xfjr\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;4103002016082165300002\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6221504910007090282\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;王志博\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;邮政银行\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;35824938799\&quot;,&quot; +
            &quot;}}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改基础信息接口tel输入特殊字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;td_zhph_xfjr\&quot;,&quot; +
            &quot;\&quot;param\&quot;:{&quot; +
            &quot;\&quot;baseAccountInfo\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;4103002016082165300002\&quot;,&quot; +
            &quot;\&quot;payAccountNo\&quot;:\&quot;6221504910007090282\&quot;,&quot; +
            &quot;\&quot;payAccountName\&quot;:\&quot;王志博\&quot;,&quot; +
            &quot;\&quot;payOpenOrgBank\&quot;:\&quot;邮政银行\&quot;,&quot; +
            &quot;\&quot;tel\&quot;:\&quot;@#%&amp;……\&quot;,&quot; +
            &quot;}}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="减免信息保存" enabled="false"/>
        <hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">settle.zhph.lan/api/v1</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="设置接口地址" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">vars.put(&quot;IFname&quot;, &quot;derate/apply&quot;);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口参数全部正确" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口itemID为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口userName为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口loanNo为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口loanNo输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;41010020160820633690000237463274983579483542657623523675843957049386027837234617649173482058924572856723647...\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口loanName为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口loanName输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳dfgsigjuhsjghsjgjsbgjnslkdhfksdnkndsjgbfjgbjfbgjsbnglsknglksndkldjfhuhgsngjbjsbjsbjbnjnbjnsjnbjnbas...\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口contractSignDate为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口contractSignDate格式为xxxx.xx.xx " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016.08.20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口contractSignDate月份超12月 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-13-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口contractSignDate日期超31天 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-32\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口loanAmount输入超1000字符" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;571845745682765273492873462375674365749288792875983589723564765763149187492830597465746572792837482.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口overdueDay为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口overdueDay输入特殊字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;%#……\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口mainBody为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口mainBody输入kdlmfakz字符串 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;kdlmfakz\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口applyDerateType为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口applyDerateType为00 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;00\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口applyDerateType为04 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;04\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口applyUser为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口applyDepartment为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口applyDepartment超1000字符串 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C03723bhbfsbh243bh5j6bjhvghvvbjh3v4gv3g5cgc5gv2jh3v1jh4j1hv5gc32gjv...\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口applyReason为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口applyReason为3 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;3\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口applyAmount输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;5027182343245467567865856808035634254354654765876987946345342436564576576586797563546345422524543636754...\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口billterm为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息保存接口billterm输入特殊字符" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;%#@&amp;*……\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="减免信息修改" enabled="false"/>
        <hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">settle.zhph.lan/api/v1</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="设置接口地址" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">vars.put(&quot;IFname&quot;, &quot;derate/update&quot;);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口参数全部正确" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口itemID为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口userName为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口loanNo为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口loanNo输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;41010020160820633690000245245254654775434523423134676879870809605674674563452234354365654754767657346345245...\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口loanName为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口loanName输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳djnjnbjfngklsdklsngjnsjgbjsbdgjnsdglsngjdnglsnjhsktgbnbejnajfaeh3325bjbkf98t92huuifh298rh2u2h922yfa...\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口contractSignDate为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口contractSignDate格式为xxxx.xx.xx " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016.08.20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口contractSignDate月份超12月 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-13-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口contractSignDate日期超31天 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-32\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口loanAmount输入超1000字符" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718235436546546246576879578456745734642523523543654756876978089090869679879784675463454263462425...000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口overdueDay为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口overdueDay输入特殊字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;%$@#……\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口mainBody为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口mainBody输入kdlmfakz字符串 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;kdlmfakz\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口applyDerateType为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口applyDerateType为0 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;00\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口applyDerateType为4 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;04\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口applyUser为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口applyDepartment为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口applyDepartment超1000字符串 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0jdfbdsabghsdbghbh4bhjb24b5h4bbh2kj5bkj4hn5jk2h5b4h54b2hbk2n2n4jnjk2...\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口applyReason为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口applyReason为3 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;3\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口applyAmount输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;37243298579843264129347817948023578947584306948695768349y38y6843768034968309489027348920490284309257876...\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;13\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口billterm为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免信息修改接口billterm输入特殊字符" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanNo\&quot;:\&quot;410100201608206336900002\&quot;,&quot; +
            &quot;\&quot;loanName\&quot;:\&quot;江伯淳\&quot;,&quot; +
            &quot;\&quot;contractSignDate\&quot;:\&quot;2016-08-20\&quot;,&quot; +
            &quot;\&quot;loanAmount\&quot;:\&quot;5718.000000\&quot;,&quot; +
            &quot;\&quot;overdueDay\&quot;:\&quot;0\&quot;,&quot; +
            &quot;\&quot;mainBody\&quot;:\&quot;ZH\&quot;,&quot; +
            &quot;\&quot;applyDerateType\&quot;:\&quot;01\&quot;,&quot; +
            &quot;\&quot;applyUser\&quot;:\&quot;q002001\&quot;,&quot; +
            &quot;\&quot;applyDepartment\&quot;:\&quot;1DDFD0C85D7100011DC068C01BBE36C0\&quot;,&quot; +
            &quot;\&quot;applyReason\&quot;:\&quot;502718\&quot;,&quot; +
            &quot;\&quot;applyAmount\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;remark\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;userId\&quot;:\&quot;\&quot;,&quot; +
            &quot;\&quot;billterm\&quot;:\&quot;%$@#$……\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="减免状态修改" enabled="false"/>
        <hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">settle.zhph.lan/api/v1</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="设置接口地址" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">vars.put(&quot;IFname&quot;, &quot;derate/status&quot;);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免状态修改接口参数全部正确" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;derateId\&quot;: \&quot;0D889FE77F00000175B80CAEB9FC2425\&quot;,&quot; +
            &quot;\&quot;status\&quot;: \&quot;4\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免状态修改接口itemID为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;derateId\&quot;: \&quot;0D889FE77F00000175B80CAEB9FC2425\&quot;,&quot; +
            &quot;\&quot;status\&quot;: \&quot;4\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免状态修改接口userName为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;derateId\&quot;: \&quot;0D889FE77F00000175B80CAEB9FC2425\&quot;,&quot; +
            &quot;\&quot;status\&quot;: \&quot;4\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免状态修改接口derateId为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;derateId\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;status\&quot;: \&quot;4\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免状态修改接口derateId输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;derateId\&quot;: \&quot;0D889FE77F00000175B80CAEB9FC2425hsdgh3h2u4h324g5h436j2h463jh6j6hj35h6g13h4h4jk2h5jg2j35hj25k2gj53gh2g5h2...\&quot;,&quot; +
            &quot;\&quot;status\&quot;: \&quot;4\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免状态修改接口status为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;derateId\&quot;: \&quot;0D889FE77F00000175B80CAEB9FC2425\&quot;,&quot; +
            &quot;\&quot;status\&quot;: \&quot;\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免状态修改接口status为1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;derateId\&quot;: \&quot;0D889FE77F00000175B80CAEB9FC2425\&quot;,&quot; +
            &quot;\&quot;status\&quot;: \&quot;1\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免状态修改接口status为2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;derateId\&quot;: \&quot;0D889FE77F00000175B80CAEB9FC2425\&quot;,&quot; +
            &quot;\&quot;status\&quot;: \&quot;2\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免状态修改接口status为3" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;derateId\&quot;: \&quot;0D889FE77F00000175B80CAEB9FC2425\&quot;,&quot; +
            &quot;\&quot;status\&quot;: \&quot;3\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免状态修改接口status为5" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;derateId\&quot;: \&quot;0D889FE77F00000175B80CAEB9FC2425\&quot;,&quot; +
            &quot;\&quot;status\&quot;: \&quot;5\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="减免状态修改接口status为特殊字符" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;derateId\&quot;: \&quot;0D889FE77F00000175B80CAEB9FC2425\&quot;,&quot; +
            &quot;\&quot;status\&quot;: \&quot;$%@#&amp;……\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="查看账户状态（APP）" enabled="false"/>
        <hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.zhph.lan/ws/v1</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="设置接口地址" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">vars.put(&quot;IFname&quot;, &quot;accountInfo/queryAccountinfo&quot;);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看账户状态（APP）接口参数全部正确" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanContractNo\&quot;: \&quot;80015132167029639359\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看账户状态（APP）接口itemID为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanContractNo\&quot;: \&quot;80015132167029639359\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看账户状态（APP）接口userName为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanContractNo\&quot;: \&quot;80015132167029639359\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看账户状态（APP）接口loanContractNo为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanContractNo\&quot;: \&quot;\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看账户状态（APP）接口loanContractNo输入超1000的字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;loanContractNo\&quot;: \&quot;80015132167029639359164t73485732454568587987293425024759826321761754823758574389209852908209...\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="查看结清账户信息（APP）" enabled="false"/>
        <hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.zhph.lan/ws/v1</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="设置接口地址" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">vars.put(&quot;IFname&quot;, &quot;accountInfo/querySettleAccountInfo&quot;);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看结清账户信息（APP）接口参数全部正确" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;settleTime\&quot;: \&quot;2017-08-09\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看结清账户信息（APP）接口itemID为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;settleTime\&quot;: \&quot;2017-08-09\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看结清账户信息（APP）接口userName为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;settleTime\&quot;: \&quot;2017-08-09\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看结清账户信息（APP）接口settleTime为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;settleTime\&quot;: \&quot;\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看结清账户信息（APP）接口settleTime格式为xxxx.xx.xx " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;settleTime\&quot;: \&quot;2017.08.09\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看结清账户信息（APP）接口settleTime月份超12月 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;settleTime\&quot;: \&quot;2017-13-09\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看结清账户信息（APP）接口settleTime日期超31天 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;settleTime\&quot;: \&quot;2017-08-32\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看结清账户信息（APP）接口settleTime输入特殊字符 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;settleTime\&quot;: \&quot;#%&amp;@*……\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="根据电话号码查询合同信息" enabled="false"/>
        <hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.zhph.lan/ws/v1</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="设置接口地址" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">vars.put(&quot;IFname&quot;, &quot;accountInfo/queryAccountInfoByPhones&quot;);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据电话号码查询合同信息接口参数全部正确" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;phones\&quot;: [\&quot;13709088841\&quot;,\&quot;17673606016\&quot;]&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据电话号码查询合同信息接口itemID为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;phones\&quot;: [\&quot;13709088841\&quot;,\&quot;17673606016\&quot;]&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据电话号码查询合同信息接口userName为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;phones\&quot;: [\&quot;13709088841\&quot;,\&quot;17673606016\&quot;]&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据电话号码查询合同信息接口phones为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;phones\&quot;: \&quot;\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据电话号码查询合同信息接口phones输入单个10位数字" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;phones\&quot;: \&quot;1370908884\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据电话号码查询合同信息接口phones输入单个12位数字" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;phones\&quot;: \&quot;137090888412\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据电话号码查询合同信息接口phones输入单个起始非1的11位数字" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;phones\&quot;: \&quot;13709088841\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据电话号码查询合同信息接口phones输入两个11位电话号码" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;phones\&quot;: [\&quot;13709088841\&quot;,\&quot;17673606016\&quot;]&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据电话号码查询合同信息接口phones输入三个11位电话号码" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;phones\&quot;: [\&quot;13709088841\&quot;,\&quot;17673606016\&quot;,\&quot;13923585923\&quot;]&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="根据身份证查询结清笔数" enabled="false"/>
        <hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">api.zhph.lan/ws/v1</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="设置接口地址" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">vars.put(&quot;IFname&quot;, &quot;accountInfo/querySettleCount&quot;);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据身份证查询结清笔数接口参数全部正确" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;idcardNo\&quot;: \&quot;513001198809090211\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据身份证查询结清笔数接口itemID为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;idcardNo\&quot;: \&quot;513001198809090211\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据身份证查询结清笔数接口userName为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;idcardNo\&quot;: \&quot;513001198809090211\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据身份证查询结清笔数接口idcardNo为空 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;idcardNo\&quot;: \&quot;\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据身份证查询结清笔数接口idcardNo输入17位数字 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;idcardNo\&quot;: \&quot;51300119880909021\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据身份证查询结清笔数接口idcardNo输入19位数字 " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;idcardNo\&quot;: \&quot;5130011988090902112\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据身份证查询结清笔数接口idcardNo第7-10位&gt;2018" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;idcardNo\&quot;: \&quot;513001201909090211\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据身份证查询结清笔数接口idcardNo第18位输入字符k" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${data}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${IFname}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="组装加密参数" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.CiphertextOpt;

System.out.println(&quot;==============================================================&quot;);
String data =&quot;{\&quot;itemID\&quot;: \&quot;18de655f-04f8-461d-a076-a1fa65518424\&quot;,&quot; +
            &quot;\&quot;userName\&quot;: \&quot;dz_zhph_xjd\&quot;,&quot; +
            &quot;\&quot;param\&quot;: {&quot; +
            &quot;\&quot;idcardNo\&quot;: \&quot;51300119880909021k\&quot;&quot; +
            &quot;}}&quot;;
String a = null;
System.out.println(&quot;-------------------加密前的请求值-----------------------&quot;);
//System.out.println(data);

//加密
try {
        a = CiphertextOpt.ciphertextEn(data);
} catch (Exception e) {
        e.printStackTrace();
}
System.out.println(&quot;-------------------加密后的请求值-----------------------&quot;);
System.out.println(a);
vars.put(&quot;data&quot;,a);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import com.CiphertextOpt;
import net.sf.json.JSONObject;

String res = prev.getResponseDataAsString();
//System.out.println(&quot;----------------------返回值-------------------------&quot;);
//System.out.println(res);

try{
	//请求数据解密
	String data = CiphertextOpt.ciphertextDec(res);
	System.out.println(&quot;-------------------解密后的返回值--------------------&quot;);
	System.out.println(data);

     JSONObject jstr = JSONObject.fromObject(data);
     String code = jstr.get(&quot;errorCode&quot;); //获取code
	String checkCode = &quot;0000&quot;; //断言的code
	if(code.equals(checkCode)){
		Failure = false;
		FailureMessage = &quot;成功&quot;;	
	}else{
		Failure = true;
		FailureMessage  = &quot;返回code值错误；返回errorCode值为：&quot;+code+&quot;; 应为：&quot;+checkCode;	
	}
     
}catch(Exception e){
	System.out.println(e);
	Failure = true;
	FailureMessage  = &quot;返回值解密错误&quot;;	
}
System.out.println(&quot;=============================================================&quot;);</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="工作台" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
